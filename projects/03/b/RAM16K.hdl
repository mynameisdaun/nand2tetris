// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
        DMux4Way(in = load, sel = address[12..13],
        a = l0, b = l1, c = l2, d = l3
        );
        DMux4Way16(in = in, sel = address[12..13],
        a = r0, b = r1, c = r2, d = r3
        );

        RAM4K(in = r0, load = l0, address = address[0..11], out = ram0);
        RAM4K(in = r1, load = l1, address = address[0..11], out = ram1);
        RAM4K(in = r2, load = l2, address = address[0..11], out = ram2);
        RAM4K(in = r3, load = l3, address = address[0..11], out = ram3);

        Mux4Way16(
        a = ram0, b = ram1, c = ram2, d = ram3,
        sel = address[12..13],
        out = out
        );
}
