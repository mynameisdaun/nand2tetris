// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
        DMux8Way(in = load, sel = address[9..11],
        a = l0, b = l1, c = l2, d = l3,
        e = l4, f = l5, g = l6, h = l7
        );
        DMux8Way16(in = in, sel = address[9..11],
        a = r0, b = r1, c = r2, d = r3,
        e = r4, f = r5, g = r6, h = r7
        );

        RAM512(in = r0, load = l0, address = address[0..8], out = ram0);
        RAM512(in = r1, load = l1, address = address[0..8], out = ram1);
        RAM512(in = r2, load = l2, address = address[0..8], out = ram2);
        RAM512(in = r3, load = l3, address = address[0..8], out = ram3);
        RAM512(in = r4, load = l4, address = address[0..8], out = ram4);
        RAM512(in = r5, load = l5, address = address[0..8], out = ram5);
        RAM512(in = r6, load = l6, address = address[0..8], out = ram6);
        RAM512(in = r7, load = l7, address = address[0..8], out = ram7);

        Mux8Way16(
        a = ram0, b = ram1, c = ram2, d = ram3,
        e = ram4, f = ram5, g = ram6, h = ram7,
        sel = address[9..11],
        out = out
        );
}
